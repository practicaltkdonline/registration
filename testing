<!DOCTYPE html>
<html lang="zh-Hant">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>比賽報名系統</title>
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;500;700&display=swap" rel="stylesheet">
  <style>
    @font-face {
      font-display: swap;
      font-family: 'NotoSansTC';
      font-style: normal;
      font-weight: 400;
      src: url('./NotoSansTC[wght].ttf') format('truetype');
    }
    body {
      font-family: 'Noto Sans TC', Arial, sans-serif;
      max-width: 800px;
      margin: 40px auto;
      padding: 20px;
      background-color: #f5f5f5;
      color: #333;
    }
    .form-container {
      background: white;
      padding: 32px;
      border-radius: 12px;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
    }
    .form-group {
      margin-bottom: 24px;
    }
    label {
      display: block;
      margin-bottom: 8px;
      font-weight: 500;
      font-size: 16px;
      color: #333;
    }
    input, select, button {
      width: 100%;
      padding: 12px;
      border: 1px solid #B0BEC5;
      border-radius: 8px;
      box-sizing: border-box;
      font-size: 16px;
      transition: border-color 0.3s, box-shadow 0.3s;
    }
    input:focus, select:focus, button:focus {
      outline: none;
      border-color: #1976D2;
      box-shadow: 0 0 6px rgba(25, 118, 210, 0.3);
    }
    .date-group {
      display: flex;
      align-items: center;
      gap: 8px;
    }
    .date-group select {
      width: 120px;
    }
    .date-group select#birthYear {
      width: 160px;
    }
    .date-group span {
      font-size: 16px;
      color: #333;
    }
    .event-list button {
      background-color: #e3f2fd;
      border: none;
      cursor: pointer;
      margin-bottom: 8px;
      position: relative;
    }
    .event-list button.selected {
      background-color: #bbdefb;
      border: 2px solid #1976D2;
    }
    .event-list button:hover {
      background-color: #bbdefb;
    }
    .category-group {
      display: flex;
      flex-direction: column;
      gap: 12px;
    }
    .category-group label {
      display: flex;
      align-items: center;
      font-weight: normal;
      font-size: 16px;
    }
    .category-group input[type="checkbox"] {
      width: auto;
      margin-right: 12px;
    }
    .error {
      color: #D32F2F;
      font-size: 14px;
      margin-top: 6px;
      display: none;
    }
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.7);
      justify-content: center;
      align-items: center;
      z-index: 1000;
    }
    .modal-content {
      background-color: white;
      padding: 32px;
      border-radius: 12px;
      width: 90%;
      max-width: 600px;
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
      display: flex;
      flex-direction: column;
      height: 80vh;
      max-height: 600px;
    }
    .modal-scroll {
      overflow-y: auto;
      flex-grow: 1;
      margin-bottom: 20px;
    }
    .modal-content p {
      font-size: 16px;
      margin: 12px 0;
    }
    .event-item {
      margin-bottom: 12px;
    }
    .event-item strong::before {
      content: '．';
      margin-right: 5px;
    }
    .category-item {
      margin-left: 20px;
      margin-top: 4px;
    }
    .category-item::before {
      content: '-';
      margin-right: 5px;
    }
    .event-total {
      margin-left: 20px;
      font-weight: bold;
      margin-top: 8px;
    }
    .event-discount, .event-admin-fee {
      margin-left: 20px;
      font-size: 14px;
      color: #555;
      margin-top: 4px;
    }
    .total-sum {
      margin-top: 20px;
      font-size: 18px;
      font-weight: bold;
      border-top: 1px solid #B0BEC5;
      padding-top: 10px;
    }
    button.confirm, button.return-button, button.confirm-selection {
      background-color: #1976D2;
      color: white;
      border: none;
      cursor: pointer;
      padding: 12px;
    }
    button.confirm:hover, button.return-button:hover, button.confirm-selection:hover {
      background-color: #1565C0;
      transform: translateY(-2px);
    }
    button.cancel {
      background-color: #B0BEC5;
      color: #333;
      padding: 12px;
    }
    button.cancel:hover {
      background-color: #90A4AE;
      transform: translateY(-2px);
    }
    #customDojo {
      margin-top: 12px;
      display: none;
    }
    .event-count {
      position: absolute;
      top: -10px;
      right: 10px;
      background-color: #ff4444;
      color: white;
      border-radius: 50%;
      width: 20px;
      height: 20px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 12px;
      font-weight: bold;
      display: none;
    }
    #thankYouPage {
      display: none;
      background: white;
      padding: 32px;
      border-radius: 12px;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
      text-align: center;
    }
    #thankYouPage h2 {
      font-size: 24px;
      margin-bottom: 16px;
      color: #333;
    }
    #thankYouPage p {
      font-size: 16px;
      margin: 16px 0;
      color: #155724;
    }
    #thankYouPage .button-group {
      display: flex;
      gap: 10px;
      justify-content: center;
    }
    @media (max-width: 600px) {
      .form-container, #thankYouPage {
        padding: 24px;
      }
      .modal-content {
        width: 95%;
        padding: 24px;
        height: 85vh;
        max-height: 500px;
      }
      .date-group {
        gap: 8px;
      }
      .date-group select {
        width: 70px;
      }
      .date-group select#birthYear {
        width: 110px;
      }
    }
    /* 浮動按鈕樣式：固定在右下，圓形購物車風格 */
    #floatingSubmitBtn {
      position: fixed;
      bottom: 20px; /* 右下方 */
      right: 20px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 50%; /* 圓形 */
      width: 60px;
      height: 60px;
      font-size: 14px;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      cursor: pointer;
      transition: background-color 0.3s, transform 0.3s;
      z-index: 1000; /* 確保在最上層 */
      padding: 0;
      flex-direction: column;
    }
    #floatingSubmitBtn:hover {
      background-color: #45a049;
      transform: scale(1.1);
    }
    #floatingSubmitBtn .event-count {
      position: absolute;
      top: -5px;
      right: -5px;
      background-color: #ff4444;
      color: white;
      border-radius: 50%;
      width: 24px;
      height: 24px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 12px;
      font-weight: bold;
    }
    /* 媒體查詢：手機版調整位置為右下（若想右上，改 top: 20px; bottom: auto;） */
    @media (max-width: 600px) {
      #floatingSubmitBtn {
        bottom: 15px;
        right: 15px;
        width: 50px;
        height: 50px;
        font-size: 12px;
      }
    }
  </style>
</head>
<body>
  <div class="form-container" id="mainForm">
    <form id="registrationForm">
      <div class="form-group">
        <label>學員姓名</label>
        <input type="text" id="name" name="entry.1702329531" required>
        <span id="nameError" class="error">請輸入學員姓名</span>
      </div>

      <div class="form-group">
        <label>聯絡電話</label>
        <input type="tel" id="phone" name="entry.1541580542" pattern="\d{8}">
        <span id="phoneError" class="error">請輸入有效的8位電話號碼</span>
      </div>

      <div class="form-group">
        <label>出生日期</label>
        <div class="date-group">
          <select id="birthYear" name="entry.1919065731_year">
            <option value="">年</option>
          </select>
          <span>/</span>
          <select id="birthMonth" name="entry.1919065731_month">
            <option value="">月</option>
          </select>
          <span>/</span>
          <select id="birthDay" name="entry.1919065731_day">
            <option value="">日</option>
          </select>
        </div>
        <span id="birthdateError" class="error">請選擇有效的出生日期（不得晚於今日）</span>
      </div>

      <div class="form-group">
        <label>所屬道場</label>
        <select id="dojo" name="entry.1923170591">
          <option value="">請選擇道場</option>
          <option value="觀塘總館">觀塘總館</option>
          <option value="紅磡-培匠道場">紅磡-培匠道場</option>
          <option value="鰂魚涌體育館">鰂魚涌體育館</option>
          <option value="北角官立小學">北角官立小學</option>
          <option value="大角嘴天主教小學">大角嘴天主教小學</option>
          <option value="佛教林金殿紀念小學">佛教林金殿紀念小學</option>
          <option value="其他">其他（請手動輸入）</option>
        </select>
        <input type="text" id="customDojo" placeholder="請輸入道場名稱" style="display: none;">
        <span id="dojoError" class="error">請選擇或輸入道場</span>
      </div>

      <div class="form-group">
        <label>選擇比賽</label>
        <div class="event-list" id="eventList">
          <!-- 比賽按鈕將動態生成 -->
        </div>
        <span id="eventListError" class="error" style="display: none;">無法載入比賽資料，請檢查試算表是否公開</span>
        <input type="hidden" id="selectedEvents" name="entry.1287068960">
        <input type="hidden" id="totalPrice" name="entry.1317768085">
      </div>

    </form>
  </div>

  <div id="categoryModal" class="modal">
    <div class="modal-content">
      <div class="modal-scroll">
        <h2 id="categoryTitle"></h2>
        <div class="category-group" id="categoryGroup"></div>
      </div>
      <div style="display: flex; gap: 10px;">
        <button class="cancel" onclick="closeCategoryModal()">取消</button>
        <button class="confirm-selection" onclick="confirmCategorySelection()">確定</button>
      </div>
    </div>
  </div>

  <div id="confirmModal" class="modal">
    <div class="modal-content">
      <div class="modal-scroll">
        <h2>請確認您的報名資料</h2>
        <p><strong>學員姓名：</strong> <span id="confirmName"></span></p>
        <p><strong>聯絡電話：</strong> <span id="confirmPhone"></span></p>
        <p><strong>出生日期：</strong> <span id="confirmBirthdate"></span></p>
        <p><strong>所屬道場：</strong> <span id="confirmDojo"></span></p>
        <p><strong>報名賽事與項目：</strong></p>
        <div id="confirmEvents"></div>
        <div id="totalSum"></div>
      </div>
      <div style="display: flex; gap: 10px;">
        <button class="cancel" onclick="cancelSubmission()">取消</button>
        <button class="confirm" onclick="confirmSubmission()">確認提交</button>
      </div>
    </div>
  </div>

  <div id="thankYouPage">
    <h2>感謝您的報名！</h2>
    <p>確認後教練將盡快與您聯繫</p>
    <div class="button-group">
      <button class="return-button" onclick="restartForm()">重新報名</button>
    </div>
  </div>

  <button type="button" id="floatingSubmitBtn" style="display: none;">
    <span id="eventCount" class="event-count"></span> <!-- 顯示選取數量 -->
    結算
  </button>

  <script>
    let eventCategories = {};
    let selectedCategories = {};
    let categoryPrices = {};
    let discountRules = {};
    let adminFees = {};
    let eventOrder = []; // 儲存 Google Sheet 的比賽順序

    // 動態載入比賽資料
    async function loadEventsFromSheet() {
      const eventList = document.getElementById('eventList');
      const eventListError = document.getElementById('eventListError');
      const spreadsheetId = '1FFuryD0S4CbOsw4HJKQQHSRtek_JwWlxGx1FmPEER9Y';
      const sheetId = '1485917481';
      const url = `https://docs.google.com/spreadsheets/d/${spreadsheetId}/gviz/tq?tqx=out:json&gid=${sheetId}&range=A2:C`;

      try {
        const response = await fetch(url);
        const text = await response.text();
        const jsonString = text.substring(47, text.length - 2);
        const data = JSON.parse(jsonString);
        const rows = data.table.rows;

        eventList.innerHTML = '';
        eventCategories = {};
        categoryPrices = {};
        discountRules = {};
        adminFees = {};
        eventOrder = []; // 重置比賽順序

        rows.forEach(row => {
          const eventName = row.c[0]?.v;
          const categories = row.c[1]?.v;
          const discounts = row.c[2]?.v || '{}';
          if (eventName && categories) {
            eventOrder.push(eventName); // 儲存比賽名稱順序
            const categoryArray = categories.split(',').map(cat => cat.trim());
            eventCategories[eventName] = categoryArray;
            categoryArray.forEach(category => {
              const match = category.match(/(.+?)\s*-\s*\$(\d+)/);
              if (match) {
                const [, categoryName, price] = match;
                categoryPrices[`${eventName}:${categoryName.trim()}`] = parseInt(price);
              }
            });

            try {
              const discountData = JSON.parse(discounts);
              discountRules[eventName] = discountData.discounts || [];
              adminFees[eventName] = discountData.adminFee || 0;
            } catch (error) {
              console.error(`解析 ${eventName} 的優惠規則或行政費失敗:`, error);
              discountRules[eventName] = [];
              adminFees[eventName] = 0;
            }

            const button = document.createElement('button');
            button.type = 'button';
            button.textContent = eventName;
            button.onclick = () => showCategoriesModal(eventName);
            if (selectedCategories[eventName] && selectedCategories[eventName].length > 0) {
              button.classList.add('selected');
            }
            eventList.appendChild(button);
          }
        });

        if (Object.keys(eventCategories).length === 0) {
          eventListError.style.display = 'block';
        }
      } catch (error) {
        console.error('載入比賽資料失敗:', error);
        eventListError.style.display = 'block';
      }
      updateSelectedEvents();
    }

    window.addEventListener('load', loadEventsFromSheet);

    const yearSelect = document.getElementById('birthYear');
    const monthSelect = document.getElementById('birthMonth');
    const daySelect = document.getElementById('birthDay');
    const currentYear = new Date().getFullYear();

    for (let year = currentYear; year >= 1900; year--) {
      let option = document.createElement('option');
      option.value = year;
      option.text = year;
      yearSelect.appendChild(option);
    }

    for (let month = 1; month <= 12; month++) {
      let option = document.createElement('option');
      option.value = month;
      option.text = month.toString().padStart(2, '0');
      monthSelect.appendChild(option);
    }

    function isLeapYear(year) {
      return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);
    }

    function updateDays() {
      const year = parseInt(yearSelect.value);
      const month = parseInt(monthSelect.value);
      daySelect.innerHTML = '<option value="">日</option>';
      if (year && month) {
        let daysInMonth = month === 2 ? (isLeapYear(year) ? 29 : 28) : [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month - 1];
        for (let day = 1; day <= daysInMonth; day++) {
          let option = document.createElement('option');
          option.value = day;
          option.text = day.toString().padStart(2, '0');
          daySelect.appendChild(option);
        }
      }
    }

    updateDays();
    yearSelect.addEventListener('change', updateDays);
    monthSelect.addEventListener('change', updateDays);

    const dojoSelect = document.getElementById('dojo');
    const customDojoInput = document.getElementById('customDojo');

    function toggleCustomDojo() {
      if (dojoSelect.value === '其他') {
        customDojoInput.style.display = 'block';
        customDojoInput.required = true;
      } else {
        customDojoInput.style.display = 'none';
        customDojoInput.required = false;
        customDojoInput.value = '';
      }
    }

    function showCategoriesModal(eventName) {
      const categoryModal = document.getElementById('categoryModal');
      const categoryGroup = document.getElementById('categoryGroup');
      const categoryTitle = document.getElementById('categoryTitle');

      categoryTitle.textContent = `選擇 ${eventName} 的項目`;
      categoryGroup.innerHTML = '';

      tempCategories[eventName] = selectedCategories[eventName] ? [...selectedCategories[eventName]] : [];
      eventCategories[eventName].forEach(category => {
        const label = document.createElement('label');
        const checkbox = document.createElement('input');
        checkbox.type = 'checkbox';
        checkbox.value = category;
        checkbox.checked = tempCategories[eventName].includes(category);
        checkbox.onchange = () => updateTempCategories(eventName, checkbox.checked, category);
        label.appendChild(checkbox);
        label.appendChild(document.createTextNode(category));
        categoryGroup.appendChild(label);
      });

      categoryModal.style.display = 'flex';
    }

    let tempCategories = {};
    function updateTempCategories(eventName, checked, category) {
      if (!tempCategories[eventName]) tempCategories[eventName] = [];
      if (checked) {
        if (!tempCategories[eventName].includes(category)) tempCategories[eventName].push(category);
      } else {
        tempCategories[eventName] = tempCategories[eventName].filter(c => c !== category);
      }
    }

    function closeCategoryModal() {
      const categoryModal = document.getElementById('categoryModal');
      categoryModal.style.display = 'none';
      tempCategories = {};
    }

    function confirmCategorySelection() {
      const eventName = document.getElementById('categoryTitle').textContent.replace('選擇 ', '').replace(' 的項目', '');
      if (tempCategories[eventName] && tempCategories[eventName].length > 0) {
        selectedCategories[eventName] = [...tempCategories[eventName]];
      } else {
        delete selectedCategories[eventName];
      }
      updateSelectedEvents();
      closeCategoryModal();

      const buttons = document.querySelectorAll('#eventList button');
      buttons.forEach(button => {
        const btnEventName = button.textContent;
        if (selectedCategories[btnEventName] && selectedCategories[btnEventName].length > 0) {
          button.classList.add('selected');
        } else {
          button.classList.remove('selected');
        }
      });
    }

    function calculateDiscountedPrice(eventName, selected, calculateFormula = false) {
      let totalPrice = 0;
      const adminFee = adminFees[eventName] || 0;
      const rules = discountRules[eventName] || [];
      const selectedCategoriesClean = selected.map(category => category.match(/(.+?)\s*-\s*\$/)?.[1].trim() || category);
      let formulaParts = [];
      let hasDiscount = false;

      // 計算項目費用
      let appliedCategories = [];
      let isSingleTotalPrice = false;

      // 首先檢查基於數量的折扣率規則（count 和 discountRate）
      for (const rule of rules) {
        if (rule.count !== undefined && rule.discountRate !== undefined && rule.count === selectedCategoriesClean.length) {
          // 計算原始總價
          let originalPrice = 0;
          selectedCategoriesClean.forEach(category => {
            originalPrice += categoryPrices[`${eventName}:${category}`] || 0;
          });
          // 應用折扣率
          totalPrice = originalPrice * rule.discountRate;
          // 保留 2 位小數
          totalPrice = Math.round(totalPrice * 100) / 100;
          appliedCategories = [...selectedCategoriesClean];
          isSingleTotalPrice = true;
          if (!rule.hasOwnProperty('name')) {
            hasDiscount = true;
          }
          if (calculateFormula) {
            formulaParts.push(`$${totalPrice.toFixed(2)}`);
          }
          break;
        }
      }

      // 若無匹配的 discountRate 規則，檢查基於數量的 totalPrice 規則
      if (!isSingleTotalPrice) {
        for (const rule of rules) {
          if (rule.count !== undefined && rule.totalPrice !== undefined && rule.count === selectedCategoriesClean.length) {
            totalPrice = rule.totalPrice;
            appliedCategories = [...selectedCategoriesClean];
            isSingleTotalPrice = true;
            if (!rule.hasOwnProperty('name')) {
              hasDiscount = true;
            }
            if (calculateFormula) {
              formulaParts.push(`$${rule.totalPrice}`);
            }
            break;
          }
        }
      }

      // 若無匹配的 count 規則，檢查基於條件的規則（condition）
      if (!isSingleTotalPrice) {
        for (const rule of rules) {
          if (rule.condition && rule.totalPrice !== undefined) {
            const conditionsMet = rule.condition.every(cond => selectedCategoriesClean.includes(cond));
            if (conditionsMet && rule.condition.length === selectedCategoriesClean.length) {
              totalPrice = rule.totalPrice;
              appliedCategories = [...rule.condition];
              isSingleTotalPrice = true;
              if (!rule.hasOwnProperty('name') && (rule.discounts || rule.totalPrice !== undefined)) {
                hasDiscount = true;
              }
              if (calculateFormula) {
                formulaParts.push(`$${rule.totalPrice}`);
              }
              break;
            }
          }
        }
      }

      // 若無完全匹配的規則，計算個別項目價格
      if (!isSingleTotalPrice) {
        rules.forEach(rule => {
          if (rule.condition && rule.totalPrice !== undefined) {
            const conditionsMet = rule.condition.every(cond => selectedCategoriesClean.includes(cond));
            if (conditionsMet) {
              totalPrice += rule.totalPrice;
              if (!rule.hasOwnProperty('name') && (rule.discounts || rule.totalPrice !== undefined)) {
                hasDiscount = true;
              }
              if (calculateFormula) {
                formulaParts.push(`$${rule.totalPrice}`);
              }
              appliedCategories.push(...rule.condition);
            }
          }
        });

        selectedCategoriesClean.forEach(category => {
          if (appliedCategories.includes(category)) return;
          let categoryPrice = categoryPrices[`${eventName}:${category}`] || 0;
          rules.forEach(rule => {
            if (rule.condition && rule.discounts) {
              const conditionsMet = rule.condition.some(cond => selectedCategoriesClean.includes(cond));
              if (conditionsMet && rule.discounts[category]) {
                categoryPrice = rule.discounts[category];
                hasDiscount = true;
              }
            }
          });
          totalPrice += categoryPrice;
          if (calculateFormula) {
            formulaParts.push(`$${categoryPrice}`);
          }
        });
      }

      // 添加行政費
      totalPrice += adminFee;
      if (calculateFormula && adminFee > 0) {
        formulaParts.push(`$${adminFee}`);
      }

      if (calculateFormula) {
        // 若有行政費，總是顯示括號公式
        if (adminFee > 0) {
          return { totalPrice, formula: `$${totalPrice.toFixed(2)} (${formulaParts.join('+')})`, hasDiscount, adminFee };
        }
        // 無行政費時，單項或單一 totalPrice/discountRate 無括號
        if (selected.length === 1 || isSingleTotalPrice) {
          return { totalPrice, formula: `$${totalPrice.toFixed(2)}`, hasDiscount, adminFee };
        }
        return { totalPrice, formula: `$${totalPrice.toFixed(2)} (${formulaParts.join('+')})`, hasDiscount, adminFee };
      }
      return totalPrice;
    }

    function updateSelectedEvents() {
      const selectedEventsInput = document.getElementById('selectedEvents');
      const totalPriceInput = document.getElementById('totalPrice');
      selectedEventsInput.value = Object.entries(selectedCategories)
        .map(([event, categories]) => {
          const cleanCategories = categories.map(category => {
            const match = category.match(/(.+?)\s*-\s*\$/);
            return match ? match[1].trim() : category;
          });
          return `${event}, ${cleanCategories.join(', ')}`;
        })
        .join('; ') || '';
      
      let totalPrice = 0;
      Object.entries(selectedCategories).forEach(([event, categories]) => {
        totalPrice += calculateDiscountedPrice(event, categories);
      });
      totalPriceInput.value = totalPrice;
      
      const floatingBtn = document.getElementById('floatingSubmitBtn');
      const eventCount = document.getElementById('eventCount');
      const eventCountNum = Object.keys(selectedCategories).length;

      floatingBtn.style.display = eventCountNum > 0 ? 'flex' : 'none';
      eventCount.textContent = eventCountNum;
      eventCount.style.display = eventCountNum > 0 ? 'flex' : 'none';
    }

    function submitForm() {
      const confirmModal = document.getElementById('confirmModal');
      const confirmEvents = document.getElementById('confirmEvents');
      const totalSum = document.getElementById('totalSum');
      const nameInput = document.getElementById('name');
      const phoneInput = document.getElementById('phone');
      const yearSelect = document.getElementById('birthYear');
      const monthSelect = document.getElementById('birthMonth');
      const daySelect = document.getElementById('birthDay');
      const dojoSelect = document.getElementById('dojo');
      const customDojoInput = document.getElementById('customDojo');
      const nameError = document.getElementById('nameError');
      const phoneError = document.getElementById('phoneError');
      const birthdateError = document.getElementById('birthdateError');
      const dojoError = document.getElementById('dojoError');

      let isValid = true;
      nameError.style.display = 'none';
      phoneError.style.display = 'none';
      birthdateError.style.display = 'none';
      dojoError.style.display = 'none';

      const isTestName = /test/i.test(nameInput.value);

      if (!nameInput.value.trim()) {
        nameError.style.display = 'block';
        isValid = false;
      }

      if (!isTestName) {
        if (!phoneInput.value.match(/^\d{8}$/)) {
          phoneError.style.display = 'block';
          isValid = false;
        }
        const year = parseInt(yearSelect.value);
        const month = parseInt(monthSelect.value);
        const day = parseInt(daySelect.value);
        const selectedDate = new Date(year, month - 1, day);
        const today = new Date();
        today.setHours(0, 0, 0, 0);
        if (!year || !month || !day || isNaN(selectedDate) || selectedDate > today) {
          birthdateError.style.display = 'block';
          isValid = false;
        }
        if (!dojoSelect.value || (dojoSelect.value === '其他' && !customDojoInput.value.trim())) {
          dojoError.style.display = 'block';
          isValid = false;
        }
      }

      if (isValid) {
        document.getElementById('confirmName').textContent = nameInput.value;
        document.getElementById('confirmPhone').textContent = phoneInput.value || '未提供';
        document.getElementById('confirmBirthdate').textContent = yearSelect.value && monthSelect.value && daySelect.value 
          ? `${yearSelect.value}/${monthSelect.value.padStart(2, '0')}/${daySelect.value.padStart(2, '0')}` 
          : '未提供';
        document.getElementById('confirmDojo').textContent = dojoSelect.value === '其他' ? customDojoInput.value : dojoSelect.value || '未提供';

        confirmEvents.innerHTML = '';
        totalSum.innerHTML = '';
        let totalPrice = 0;
        let totalFormulaParts = [];

        if (Object.keys(selectedCategories).length > 0) {
          // 按 Google Sheet 的比賽順序排序
          const sortedEvents = Object.keys(selectedCategories).sort((a, b) => {
            return eventOrder.indexOf(a) - eventOrder.indexOf(b);
          });

          sortedEvents.forEach(event => {
            const categories = selectedCategories[event];
            // 按 Google Sheet B 欄的項目順序排序
            const sortedCategories = categories.sort((a, b) => {
              return eventCategories[event].indexOf(a) - eventCategories[event].indexOf(b);
            });

            const eventDiv = document.createElement('div');
            eventDiv.className = 'event-item';
            const eventStrong = document.createElement('strong');
            eventStrong.textContent = event;
            eventDiv.appendChild(eventStrong);

            // 每個項目單獨一行
            sortedCategories.forEach(category => {
              const categoryDiv = document.createElement('div');
              categoryDiv.className = 'category-item';
              categoryDiv.textContent = category;
              eventDiv.appendChild(categoryDiv);
            });

            const { totalPrice: eventPrice, formula, hasDiscount, adminFee } = calculateDiscountedPrice(event, sortedCategories, true);
            totalPrice += eventPrice;
            totalFormulaParts.push(`$${eventPrice.toFixed(2)}`);

            const totalDiv = document.createElement('div');
            totalDiv.className = 'event-total';
            totalDiv.textContent = formula;
            eventDiv.appendChild(totalDiv);

            if (hasDiscount) {
              const discountDiv = document.createElement('div');
              discountDiv.className = 'event-discount';
              discountDiv.textContent = '已添加優惠';
              eventDiv.appendChild(discountDiv);
            }

            if (adminFee > 0) {
              const adminFeeDiv = document.createElement('div');
              adminFeeDiv.className = 'event-admin-fee';
              adminFeeDiv.textContent = '已包括行政費';
              eventDiv.appendChild(adminFeeDiv);
            }

            confirmEvents.appendChild(eventDiv);
          });
        } else {
          confirmEvents.textContent = '無';
        }

        const totalSumDiv = document.createElement('div');
        totalSumDiv.className = 'total-sum';
        totalSumDiv.textContent = Object.keys(selectedCategories).length === 1 
          ? `總數 $${totalPrice.toFixed(2)}` 
          : `總數 $${totalPrice.toFixed(2)} (${totalFormulaParts.join('+')})`;
        totalSum.appendChild(totalSumDiv);

        confirmModal.style.display = 'flex';
      }
    }

    function cancelSubmission() {
      const confirmModal = document.getElementById('confirmModal');
      confirmModal.style.display = 'none';
    }

    async function confirmSubmission() {
      const confirmModal = document.getElementById('confirmModal');
      const form = document.getElementById('registrationForm');
      const formContainer = document.getElementById('mainForm');
      const thankYouPage = document.getElementById('thankYouPage');
      const formData = new FormData(form);
      if (dojoSelect.value === '其他') {
        formData.set('entry.1923170591', customDojoInput.value);
      }

      try {
        const response = await fetch('https://docs.google.com/forms/d/e/1FAIpQLSd9pOv3srI-e_Pn-zijtiVtZiTwncE3xNbNJjKOMRCcxuu2nQ/formResponse', {
          method: 'POST',
          body: formData,
          mode: 'no-cors'
        });
        console.log('Form submission response:', response);
        console.log('表單提交成功');
        confirmModal.style.display = 'none';
        formContainer.style.display = 'none';
        thankYouPage.style.display = 'block';
      } catch (error) {
        console.error('提交失敗:', error);
        alert('表單提交失敗，請稍後再試或檢查控制台日誌。');
      }
    }

    function resetForm() {
      const form = document.getElementById('registrationForm');
      form.reset();
      selectedCategories = {};
      document.getElementById('selectedEvents').value = '';
      document.getElementById('totalPrice').value = '';
      document.getElementById('floatingSubmitBtn').style.display = 'none';
      document.getElementById('eventCount').style.display = 'none';
      document.getElementById('nameError').style.display = 'none';
      document.getElementById('phoneError').style.display = 'none';
      document.getElementById('birthdateError').style.display = 'none';
      document.getElementById('dojoError').style.display = 'none';
      customDojoInput.style.display = 'none';
      customDojoInput.value = '';
      updateDays();
      loadEventsFromSheet();
    }

    function restartForm() {
      const thankYouPage = document.getElementById('thankYouPage');
      const formContainer = document.getElementById('mainForm');
      thankYouPage.style.display = 'none';
      formContainer.style.display = 'block';
      resetForm();
    }

    document.getElementById('floatingSubmitBtn').onclick = submitForm;
  </script>
</body>
</html>
